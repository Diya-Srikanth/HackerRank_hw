#1 String Split and Join

def split_and_join(line):
    d = line.split(" ")
    d = "-".join(d)
    return d
if __name__ == '__main__':
    line = input()
    result = split_and_join(line)
    print(result)
    --------------------------
    
#2 What's Your Name

def print_full_name(a, b):
    print "Hello "+  a  +" " + b  +  "! You just delved into python."
if __name__ == '__main__':
    first_name = input()
    last_name = input()
    print_full_name(first_name, last_name)
    --------------------------
    
#3 Mutations

def mutate_string(string, position, character):
    l = list(string)
    l[position] = character
    s = ''.join(l)
    return s
if __name__ == '__main__':
    s = input()
    i, c = input().split()
    s_new = mutate_string(s, int(i), c)
    print(s_new)
    
    ---------------------------
    
#4 Find a string

def count_substring(string, sub_string):
    r = 0
    for i in range(len(string)):
        if string[i:].startswith(sub_string):
            r += 1
    return r
if __name__ == '__main__':
    string = input().strip()
    sub_string = input().strip()
    
    count = count_substring(string, sub_string)
    print(count)
    
    -----------------------------
    
 #5 String Validators
 
 if __name__ == '__main__':
    s = raw_input()
    a,b,c,d,e = False, False,False,False,False
    for r in s:
        if r.isalnum():
            a = True
        if r.isalpha():
            b = True
        if r.isdigit():
            c = True
        if r.islower():
            d = True
        if r.isupper():
            e = True
    print a
    print b
    print c
    print d
    print e
    
    ---------------------------------
    
 #6 Text Alignment
 
 #Replace all ______ with rjust, ljust or center. 

thickness = int(raw_input()) #This must be an odd number
c = 'H'

#Top Cone
for i in range(thickness):
    print (c*i).rjust(thickness-1)+c+(c*i).ljust(thickness-1)

#Top Pillars
for i in range(thickness+1):
    print (c*thickness).center(thickness*2)+(c*thickness).center(thickness*6)

#Middle Belt
for i in range((thickness+1)/2):
    print (c*thickness*5).center(thickness*6)    

#Bottom Pillars
for i in range(thickness+1):
    print (c*thickness).center(thickness*2)+(c*thickness).center(thickness*6)    

#Bottom Cone
for i in range(thickness):
    print ((c*(thickness-i-1)).rjust(thickness)+c+(c*(thickness-i-1)).ljust(thickness)).rjust(thickness*6)
    
    ---------------------------------------------
    
#7 Text Wrap

import textwrap

def wrap(string, max_width):
    for i in range(0, len(string), max_width):
        f = string[i:i+max_width]
        print f
    return ""

if __name__ == '__main__':
    string, max_width = raw_input(), int(raw_input())
    result = wrap(string, max_width)
    print result
    
    ----------------------------------------------
    
#8 Capitalize!

def solve(s):
   s = s.split(" ")
   return (" ".join(i.capitalize() for i in s))

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    s = input()

    result = solve(s)

    fptr.write(result + '\n')

    fptr.close()
    
    -----------------------------------------------
    
#9 Minion Game

def minion_game(string):
    vowel =['A','E','I','O','U']
    c=0
    k=0
    for i in range(len(string)):
        if string[i] in vowel:
            c+= len(string)-i
        else:
            k+=len(string)-i
    if k>c:
        print("Stuart"+" "+"%d" %  k)
    elif c>k:
        print("Kevin"+" "+ "%d" %c)
    else:
        print("Draw")

        

 if __name__ == '__main__':
    s = input()
    minion_game(s)
    
    ------------------------------------------
    
 #10 Merge the Tools
 
 def merge_the_tools(string, k):
    for i in range(0, len(string), k):
        c = ""
        for f in string[i : i + k]:
            if f not in c:
                c += f
        print(c)

 if __name__ == '__main__':
    string, k = input(), int(input())
    merge_the_tools(string, k)
    
    --------------------------------------------
 

    

